<diagram program="umletino" version="14.4.0-SNAPSHOT"><zoom_level>10</zoom_level><help_text>// Uncomment the following line to change the fontsize and font:
fontsize=10
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text><element><id>UMLClass</id><coordinates><x>150</x><y>250</y><w>239</w><h>189</h></coordinates><panel_attributes>Labyrinthe
--
- listeCases : Case[][] 
- sortie : int[]
--
+ Labyrinthe()
+ casesAdjacentes(int,int) : Cases[]
+ getCase(int,int,char) : Case
+ setListeCase(int,int,Case) : void
+ setSortie(int,int) : void
+ cherckSortie(int,int) : boolean
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>179</x><y>790</y><w>209</w><h>189</h></coordinates><panel_attributes>Case
--
- traversable : boolean
- occupant : Personnage
--
+ Case(boolean)
+ estTraversable() : boolean
+ setOccupant(Personnage) : void
+ getOccupant() : Personnage
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>269</x><y>429</y><w>80</w><h>380</h></coordinates><panel_attributes>lt=&lt;-
listeCases
m1=*
m2=*</panel_attributes><additional_attributes>10;360;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>969</x><y>190</y><w>260</w><h>259</h></coordinates><panel_attributes>Niveau
--
- labyrinthe : Labyrinthe 
- listeMonstre : ArrayList&lt;Monstre&gt;
- aventurier : Aventurier
- url : String
--
+ Niveau(String)
+ deplacerAventurier(Commande) : void
+ deplaceMonstres() : void
+ aventurierAttaque(Commande) : void
+ monstreAttaque() : void
+ monstreMort(Personnage) : void
+ chargerLabyritne(String) : void

--
+ evoluer(Commande) : void
+ etreFini() : boolean

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>379</x><y>299</y><w>610</w><h>50</h></coordinates><panel_attributes>lt=&lt;-
labyrinthe
m1=1
m2=*</panel_attributes><additional_attributes>10;20;590;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>929</x><y>779</y><w>209</w><h>209</h></coordinates><panel_attributes>&lt;&lt;Abstract&gt;&gt;
Personnage
--
# x : int
# y : int
# pv : int
# degat : int
- orientation : char
# caseOccupe : Case
--
+ Personnage(int,int,int,int,Case)
/ seDeplacer(Cases[]) : void/
+ attaquer(Case) : void
+ prendreDegat(int) : void
--
+getX() : int
+getY() : int
+getPv() : int
+getDegat() : int
+etreMort() : boolean


</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1089</x><y>559</y><w>270</w><h>150</h></coordinates><panel_attributes>&lt;&lt;Abstract&gt;&gt;
Monstre
--

--
+ Monstre(int,int,int,int,Case)
/ seDeplacer(Case[]) : void /
--





</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1039</x><y>699</y><w>160</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;80;140;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1490</x><y>509</y><w>300</w><h>130</h></coordinates><panel_attributes>MonstreImmobile
--

--
+ MonstreImmobile(int,int,int,int,Case)
+ seDeplacer(Cases[]) : void





</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1350</x><y>599</y><w>160</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;140;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1350</x><y>670</y><w>160</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;140;10</additional_attributes></element><element><id>Relation</id><coordinates><x>839</x><y>690</y><w>220</w><h>110</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>200;90;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>709</x><y>550</y><w>270</w><h>150</h></coordinates><panel_attributes>Aventurier
--
- nom : String
--
+ Aventurier(int,int,int,int,Case,String)
+ seDeplacer(Cases[]) : void
--





</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>850</x><y>440</y><w>240</w><h>130</h></coordinates><panel_attributes>lt=&lt;-
aventurier
m1=1
m2=*</panel_attributes><additional_attributes>10;110;220;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1070</x><y>439</y><w>150</w><h>140</h></coordinates><panel_attributes>lt=&lt;-
listeMonstre
m1=*
m2=*</panel_attributes><additional_attributes>130;120;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1490</x><y>650</y><w>300</w><h>130</h></coordinates><panel_attributes>MonstreDeplacementAleatoire
--

--
+ MonstreDeplacementAleatoire(int,int,int,int,Case)
+ seDeplacer(Cases[]) : void





</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>379</x><y>870</y><w>570</w><h>50</h></coordinates><panel_attributes>lt=&lt;-&gt;
caseOccupe
occupant
m1=*
m2=*</panel_attributes><additional_attributes>10;20;550;20</additional_attributes></element></diagram>