<diagram program="umletino" version="14.4.0-SNAPSHOT"><zoom_level>10</zoom_level><help_text>// Uncomment the following line to change the fontsize and font:
fontsize=10
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text><element><id>UMLClass</id><coordinates><x>0</x><y>392</y><w>239</w><h>189</h></coordinates><panel_attributes>Labyrinthe
--
- listeCases : Case[][] 
- sortie : int[]
--
+ Labyrinthe()
+ casesAdjacentes(int,int) : Cases[]
+ getCase(int,int,char) : Case
+ setListeCase(int,int,Case) : void
+ setSortie(int,int) : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>29</x><y>692</y><w>209</w><h>189</h></coordinates><panel_attributes>Case
--
- traversable : boolean
- occupant : Personnage
--
+ Case(boolean)
+ estTraversable() : boolean
+ setOccupant(Personnage) : void
+ getOccupant() : Personnage
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>119</x><y>571</y><w>80</w><h>140</h></coordinates><panel_attributes>lt=&lt;-
listeCases
m1=*
m2=*</panel_attributes><additional_attributes>10;120;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>429</x><y>332</y><w>260</w><h>239</h></coordinates><panel_attributes>Niveau
--
- labyrinthe : Labyrinthe 
- listeMonstre : ArrayList&lt;Monstre&gt;
- aventurier : Aventurier
- url : String
--
+ Niveau(String)
+ deplacerAventurier(Commande) : void
+ deplaceMonstres() : void
+ aventurierAttaque(Commande) : void
+ monstreAttaque() : void
+ chargerLabyritne(String) : void

--
+ evoluer(Commande) : void
+ etreFini() : boolean

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>229</x><y>441</y><w>220</w><h>50</h></coordinates><panel_attributes>lt=&lt;-
labyrinthe
m1=1
m2=*</panel_attributes><additional_attributes>10;20;200;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>849</x><y>271</y><w>209</w><h>209</h></coordinates><panel_attributes>&lt;&lt;Abstract&gt;&gt;
Personnage
--
- x : int
- y : int
- pv : int
- degat : int
- orientation : char
- caseOccupe : Case
--
+ Personnage(int,int,int,int,Case)
/ seDeplacer(Cases[]) : void/
+ attaquer(Case) : void
+ prendreDegat(int) : void
--
+getX() : int
+getY() : int
+getPv() : int
+getDegat() : int
+etreMort() : boolean


</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>829</x><y>521</y><w>270</w><h>150</h></coordinates><panel_attributes>&lt;&lt;Abstract&gt;&gt;
Monstre
--

--
+ Monstre(int,int,int,int,Case)
--





</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>949</x><y>471</y><w>30</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1200</x><y>431</y><w>270</w><h>130</h></coordinates><panel_attributes>MonstreImmobile
--

--
+ MonstreImmobile(int,int,int,int,Case)
+ seDeplacer(Cases[]) : void





</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1090</x><y>481</y><w>130</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;80;110;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1090</x><y>612</y><w>130</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;110;70</additional_attributes></element><element><id>Relation</id><coordinates><x>949</x><y>212</y><w>30</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;60;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>819</x><y>72</y><w>270</w><h>150</h></coordinates><panel_attributes>Aventurier
--
- nom : String
--
+ Aventurier(int,int,int,int,Case,String)
+ seDeplacer(Cases[]) : void
--





</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>680</x><y>112</y><w>160</w><h>280</h></coordinates><panel_attributes>lt=&lt;-
aventurier
m1=1
m2=*</panel_attributes><additional_attributes>140;10;10;260</additional_attributes></element><element><id>Relation</id><coordinates><x>680</x><y>481</y><w>170</w><h>170</h></coordinates><panel_attributes>lt=&lt;-
listeMonstre
m1=*
m2=*</panel_attributes><additional_attributes>150;150;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1200</x><y>622</y><w>300</w><h>130</h></coordinates><panel_attributes>MonstreDeplacementAleatoire
--

--
+ MonstreDeplacementAleatoire(int,int,int,int,Case)
+ seDeplacer(Cases[]) : void





</panel_attributes><additional_attributes></additional_attributes></element></diagram>